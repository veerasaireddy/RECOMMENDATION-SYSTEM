#  Step 1: Import Libraries
import pandas as pd
import numpy as np
from sklearn.metrics.pairwise import cosine_similarity


# Step 2: Create Sample Ratings Data
data = {
    'user': ['A', 'A', 'A', 'B', 'B', 'C', 'C', 'D'],
    'item': ['Item1', 'Item2', 'Item3', 'Item2', 'Item3', 'Item1', 'Item3', 'Item2'],
    'rating': [5, 3, 4, 4, 5, 5, 2, 4]
}
df = pd.DataFrame(data)


# Step 3: Create a User-Item Matrix
user_item_matrix = df.pivot_table(index='user', columns='item', values='rating').fillna(0)
print(user_item_matrix)


#  Step 4: Compute User Similarity (Cosine Similarity)
user_similarity = cosine_similarity(user_item_matrix)
user_sim_df = pd.DataFrame(user_similarity, index=user_item_matrix.index, columns=user_item_matrix.index)
print("User Similarity Matrix:\n", user_sim_df)



# Step 5: Make a Recommendation Function
def get_user_recommendations(user_id, user_item_matrix, similarity_matrix):
    similar_users = similarity_matrix[user_id].sort_values(ascending=False)
    similar_users = similar_users.drop(user_id)  # remove self
    weighted_ratings = pd.Series(dtype=float)

    for similar_user, sim_score in similar_users.items():
        user_ratings = user_item_matrix.loc[similar_user]
        weighted_ratings = weighted_ratings.add(user_ratings * sim_score, fill_value=0)
    
    user_history = user_item_matrix.loc[user_id]
    recommendations = weighted_ratings[user_history == 0]
    recommendations = recommendations.sort_values(ascending=False)
    
    return recommendations.head(3)

# Example usage
recommendations_for_A = get_user_recommendations('A', user_item_matrix, user_sim_df)
print("Recommendations for User A:\n", recommendations_for_A)
